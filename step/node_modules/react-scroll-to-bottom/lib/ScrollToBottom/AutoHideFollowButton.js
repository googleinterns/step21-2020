"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _glamor = require("glamor");

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useScrollToEnd = _interopRequireDefault(require("../hooks/useScrollToEnd"));

var _useSticky3 = _interopRequireDefault(require("../hooks/useSticky"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ROOT_CSS = (0, _glamor.css)({
  backgroundColor: 'rgba(0, 0, 0, .2)',
  borderRadius: 10,
  borderWidth: 0,
  bottom: 5,
  cursor: 'pointer',
  height: 20,
  outline: 0,
  position: 'absolute',
  right: 20,
  width: 20,
  '&:hover': {
    backgroundColor: 'rgba(0, 0, 0, .4)'
  },
  '&:active': {
    backgroundColor: 'rgba(0, 0, 0, .6)'
  }
});

var AutoHideFollowButton = function AutoHideFollowButton(_ref) {
  var children = _ref.children,
      className = _ref.className;

  var _useSticky = (0, _useSticky3.default)(),
      _useSticky2 = _slicedToArray(_useSticky, 1),
      sticky = _useSticky2[0];

  var scrollToEnd = (0, _useScrollToEnd.default)();
  return !sticky && /*#__PURE__*/_react.default.createElement("button", {
    className: (0, _classnames.default)(ROOT_CSS + '', (className || '') + ''),
    onClick: scrollToEnd,
    type: "button"
  }, children);
};

AutoHideFollowButton.defaultProps = {
  children: undefined,
  className: ''
};
AutoHideFollowButton.propTypes = {
  children: _propTypes.default.any,
  className: _propTypes.default.string
};
var _default = AutoHideFollowButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TY3JvbGxUb0JvdHRvbS9BdXRvSGlkZUZvbGxvd0J1dHRvbi5qcyJdLCJuYW1lcyI6WyJST09UX0NTUyIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsImJvcmRlcldpZHRoIiwiYm90dG9tIiwiY3Vyc29yIiwiaGVpZ2h0Iiwib3V0bGluZSIsInBvc2l0aW9uIiwicmlnaHQiLCJ3aWR0aCIsIkF1dG9IaWRlRm9sbG93QnV0dG9uIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJzdGlja3kiLCJzY3JvbGxUb0VuZCIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImFueSIsInN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsUUFBUSxHQUFHLGlCQUFJO0FBQ25CQyxFQUFBQSxlQUFlLEVBQUUsbUJBREU7QUFFbkJDLEVBQUFBLFlBQVksRUFBRSxFQUZLO0FBR25CQyxFQUFBQSxXQUFXLEVBQUUsQ0FITTtBQUluQkMsRUFBQUEsTUFBTSxFQUFFLENBSlc7QUFLbkJDLEVBQUFBLE1BQU0sRUFBRSxTQUxXO0FBTW5CQyxFQUFBQSxNQUFNLEVBQUUsRUFOVztBQU9uQkMsRUFBQUEsT0FBTyxFQUFFLENBUFU7QUFRbkJDLEVBQUFBLFFBQVEsRUFBRSxVQVJTO0FBU25CQyxFQUFBQSxLQUFLLEVBQUUsRUFUWTtBQVVuQkMsRUFBQUEsS0FBSyxFQUFFLEVBVlk7QUFZbkIsYUFBVztBQUNUVCxJQUFBQSxlQUFlLEVBQUU7QUFEUixHQVpRO0FBZ0JuQixjQUFZO0FBQ1ZBLElBQUFBLGVBQWUsRUFBRTtBQURQO0FBaEJPLENBQUosQ0FBakI7O0FBcUJBLElBQU1VLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBdUIsT0FBNkI7QUFBQSxNQUExQkMsUUFBMEIsUUFBMUJBLFFBQTBCO0FBQUEsTUFBaEJDLFNBQWdCLFFBQWhCQSxTQUFnQjs7QUFBQSxtQkFDdkMsMEJBRHVDO0FBQUE7QUFBQSxNQUNqREMsTUFEaUQ7O0FBRXhELE1BQU1DLFdBQVcsR0FBRyw4QkFBcEI7QUFFQSxTQUNFLENBQUNELE1BQUQsaUJBQ0U7QUFBUSxJQUFBLFNBQVMsRUFBRSx5QkFBV2QsUUFBUSxHQUFHLEVBQXRCLEVBQTBCLENBQUNhLFNBQVMsSUFBSSxFQUFkLElBQW9CLEVBQTlDLENBQW5CO0FBQXNFLElBQUEsT0FBTyxFQUFFRSxXQUEvRTtBQUE0RixJQUFBLElBQUksRUFBQztBQUFqRyxLQUNHSCxRQURILENBRko7QUFPRCxDQVhEOztBQWFBRCxvQkFBb0IsQ0FBQ0ssWUFBckIsR0FBb0M7QUFDbENKLEVBQUFBLFFBQVEsRUFBRUssU0FEd0I7QUFFbENKLEVBQUFBLFNBQVMsRUFBRTtBQUZ1QixDQUFwQztBQUtBRixvQkFBb0IsQ0FBQ08sU0FBckIsR0FBaUM7QUFDL0JOLEVBQUFBLFFBQVEsRUFBRU8sbUJBQVVDLEdBRFc7QUFFL0JQLEVBQUFBLFNBQVMsRUFBRU0sbUJBQVVFO0FBRlUsQ0FBakM7ZUFLZVYsb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdnbGFtb3InO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHVzZVNjcm9sbFRvRW5kIGZyb20gJy4uL2hvb2tzL3VzZVNjcm9sbFRvRW5kJztcbmltcG9ydCB1c2VTdGlja3kgZnJvbSAnLi4vaG9va3MvdXNlU3RpY2t5JztcblxuY29uc3QgUk9PVF9DU1MgPSBjc3Moe1xuICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsIDAsIDAsIC4yKScsXG4gIGJvcmRlclJhZGl1czogMTAsXG4gIGJvcmRlcldpZHRoOiAwLFxuICBib3R0b206IDUsXG4gIGN1cnNvcjogJ3BvaW50ZXInLFxuICBoZWlnaHQ6IDIwLFxuICBvdXRsaW5lOiAwLFxuICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgcmlnaHQ6IDIwLFxuICB3aWR0aDogMjAsXG5cbiAgJyY6aG92ZXInOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLCAwLCAwLCAuNCknXG4gIH0sXG5cbiAgJyY6YWN0aXZlJzoge1xuICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwgMCwgMCwgLjYpJ1xuICB9XG59KTtcblxuY29uc3QgQXV0b0hpZGVGb2xsb3dCdXR0b24gPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lIH0pID0+IHtcbiAgY29uc3QgW3N0aWNreV0gPSB1c2VTdGlja3koKTtcbiAgY29uc3Qgc2Nyb2xsVG9FbmQgPSB1c2VTY3JvbGxUb0VuZCgpO1xuXG4gIHJldHVybiAoXG4gICAgIXN0aWNreSAmJiAoXG4gICAgICA8YnV0dG9uIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhST09UX0NTUyArICcnLCAoY2xhc3NOYW1lIHx8ICcnKSArICcnKX0gb25DbGljaz17c2Nyb2xsVG9FbmR9IHR5cGU9XCJidXR0b25cIj5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9idXR0b24+XG4gICAgKVxuICApO1xufTtcblxuQXV0b0hpZGVGb2xsb3dCdXR0b24uZGVmYXVsdFByb3BzID0ge1xuICBjaGlsZHJlbjogdW5kZWZpbmVkLFxuICBjbGFzc05hbWU6ICcnXG59O1xuXG5BdXRvSGlkZUZvbGxvd0J1dHRvbi5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55LFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEF1dG9IaWRlRm9sbG93QnV0dG9uO1xuIl19